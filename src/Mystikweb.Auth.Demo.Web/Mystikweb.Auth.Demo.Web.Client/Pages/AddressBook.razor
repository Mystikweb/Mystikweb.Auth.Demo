@page "/address-book"

@rendermode InteractiveWebAssembly

@attribute [StreamRendering]
@attribute [Authorize]

@inject ILogger<AddressBook> Logger
@inject IServiceScopeFactory ScopeFactory

<PageTitle>Address Book</PageTitle>

<FluentDataGrid Id="addressbook-grid" Items="@addressBook" GridTemplateColumns="1fr 1fr" TGridItem="PersonItem">
    <PropertyColumn Title="First Name" Property="@(c => c!.FirstName)" Align="Align.Start" />
    <PropertyColumn Title="Last Name" Property="@(c => c!.LastName)" Align="Align.Start" />
</FluentDataGrid>

@code {
    private IQueryable<PersonItem>? addressBook;

    protected override async Task OnInitializedAsync()
    {
        using var scope = ScopeFactory.CreateScope();

        try
        {
            var addressBookApiClient = scope.ServiceProvider.GetService<AddressBookApiClient>();
            if (addressBookApiClient is null)
            {
                Logger.LogError("AddressBookApiClient is not registered in the service provider.");
                addressBook = Enumerable.Empty<PersonItem>().AsQueryable();
            }
            else
                addressBook = (await addressBookApiClient.GetPeopleAsync()).AsQueryable();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to load address book");
            addressBook = Enumerable.Empty<PersonItem>().AsQueryable();
        }
    }

}
